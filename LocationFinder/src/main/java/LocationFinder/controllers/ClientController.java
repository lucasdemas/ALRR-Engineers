package LocationFinder.controllers;

import LocationFinder.exceptions.InvalidTypeException;
import LocationFinder.repositories.ClientRepository;
import LocationFinder.models.Client;
import LocationFinder.services.ClientService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController // This means that this class is a Controller
@RequestMapping(path="/client")
public class ClientController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ClientRepository clientRepo;

    @Autowired
    private ClientService clientServ;

    @PostMapping(path="/add")
    public String addNewClient(@RequestParam String client_name,
                            @RequestParam String client_email) {
        try {
            //Create a new client and add the data provided by the user
            Client newClient = new Client();
            newClient.setName(client_name);
            newClient.setEmail(client_email);
            //Check that the inputted data is valid
            clientServ.checkInvalid(newClient);

            //If data is valid add new client to table
            clientServ.addClient(newClient);
            return "Saved";
        }
        catch (InvalidTypeException e)  {
            return e.getMessage();
        }
    }

    @GetMapping(path="/getAll")
    Iterable<Client> getClients() {
        return clientRepo.findAll();
    }
}
